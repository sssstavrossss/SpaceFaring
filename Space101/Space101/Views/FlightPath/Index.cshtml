@using Space101.Helper_Models

@model IEnumerable<Space101.ViewModels.FlightPathViewModels.FlightPathViewModel>

@{
    ViewBag.Title = "Index";
}
<br />
<h2>Flight Paths</h2>
<br />
@if (!Model.Any())
{
    <p>There are no flight paths yet</p>
    if (User.IsInRole(AvailableRoles.Admin) || User.IsInRole(AvailableRoles.DatabaseManager))
    {
        @Html.ActionLink("Create flight path", "New", "FlightPath", null, new { @class = "btn btn-primary" })
    }
}
else
{
    <table class="table table-responsive table-striped table-bordered" id="flightPaths">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FlightPathId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DepartureName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DestinationName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Distance)
                </th>
                @if (User.IsInRole(AvailableRoles.Admin) || User.IsInRole(AvailableRoles.DatabaseManager))
                {
                    <th>
                        @Html.ActionLink("Create flight path", "New", "FlightPath", null, new { @class = "btn btn-primary" })
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var flightPath in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => flightPath.FlightPathId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => flightPath.DepartureName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => flightPath.DestinationName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => flightPath.Distance)
                    </td>
                    @if (User.IsInRole(AvailableRoles.Admin) || User.IsInRole(AvailableRoles.DatabaseManager))
                    {
                        <td>
                            <button class="btn btn-danger js-delete" data-flightPath-id="@flightPath.FlightPathId">Delete</button>
                            @if (User.IsInRole(AvailableRoles.DatabaseManager))
                            {
                                <button class="btn btn-danger js-hard-delete" data-flightPath-id="@flightPath.FlightPathId">Hard Delete</button>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@if (User.IsInRole(AvailableRoles.DatabaseManager))
{
    @section scripts{

        @Scripts.Render("~/bundles/flightPath")

        <script>
            $(document).ready(function () {
                FlightPathController.initializeDataTable("#flightPaths");
                FlightPathController.initializeDelete('#flightPaths', CustomBootBoxAlerts.confirmDelete, CustomToasts.successManageModel, CustomToasts.failManageModel);
                FlightPathController.initializeHardDelete('#flightPaths', CustomBootBoxAlerts.confirmDelete, CustomToasts.successManageModel, CustomToasts.failManageModel);
            });
        </script>
    }
}
else
{
    @section scripts{

        @Scripts.Render("~/bundles/flightPath")

        <script>
            $(document).ready(function () {
                FlightPathController.initializeDataTable("#flightPaths");
                FlightPathController.initializeDelete('#flightPaths', CustomBootBoxAlerts.confirmDelete, CustomToasts.successManageModel, CustomToasts.failManageModel);
            });
        </script>
    }
}